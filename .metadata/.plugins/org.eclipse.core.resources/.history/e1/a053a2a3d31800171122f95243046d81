package thread;

import coffeeValues.Amaricano;
import coffeeValues.coffeeData;
import components.Labels;
import main.cafeTime;
import panels.playPage;

public class playThread extends playPage implements Runnable{

	cafeTime F;
	Amaricano a;
	public static int num = 0;
	public boolean flag = true;
	
	
	@Override
	public void run() {
		System.out.println("스레드 시작");
		// TODO Auto-generated method stub
//		int i = 0;
//		System.out.println(i);
//		i++;public void run() {
//		this.a = new Amaricano();

//		while(num > -1){
//			num++;
//			System.out.println(num);
//		}
		
		while(flag == true){
			
			if(flag) {
	          //((int)(Math.random() * (최대값 - 최소값 + 1)) + 최소값); --> 최소값 ~ 최대값 사이 랜덤 
	          //랜덤하게 일정시간 멈추게 하는 부분   
	        	 
	        	  int secs = ((int)(Math.random() * (7 - 3 + 1)) + 3); 
	        	  System.out.println("(" + secs + "초 후에 주문이 들어옵니다.)"); 
	      		
//	        	  testLab.setText("aaaa");
//	                for(int i = secs; i >= 0; i--) {
//	                
//	                	this.testLab.setText("(" + secs + "초 후에 주문이 들어옵니다.)");
//	                	
//	                	
//	                }
			}
		}
		
		
    }

//	public void getRecipe(){
//		System.out.println(a.getRecipe());
//	}
	
	public void test(){
		System.out.println("스레드 안에 있는 메서드");
	}
	

}
